회귀 (Regression)
- 여러 개의 독립변수와 한 개의 종속변수 간의 상관관계를 모델링하는 기법
- Y = W1X1 + W2X2 + W3X3 + ... + WnXn
- 독립 변수(X) : 서로 간 상관관계가 적고 독립적인 변수
    - 피처 : 아파트 크기, 방 개수, 주변 지하철역 수, 주변 학군
- 종속 변수(Y)
    - 결정값 : 아파트 가격
- 회기 계수(W) : 독립 변수의 값에 영향을 미치는 것

선형 회귀
- 가장 많이 사용되 회귀
- 실제값과 예측값의 차이(오류의 제곱값)을 최소화하는 직선형 회귀선을 최적화하는 방식
- 실제값과 예측값의 차이인 오류를 최소로 줄일 수 있는 선형 함수를 찾아서
- 이 선형 함수에 독립변수(피처)를 입력해
- 종속변수(타깃값, 예측값)을 예측하는 것
- 규제 방법에 따라 여러 유형으로 나뉨

규제
- 일반적인 선형 회기의 과적합 문제를 해결하기 위해서
- 회기 계수에 패널티 값을 적용하는 것

대표적인 선형 회귀 모델
- 일반 선형 회귀 : 규제를 적용하지 않은 모델로 예측값과 실제값의 손실함수(RSS)를 최소화할 수 있도록 최적화
- 릿지(Ridge) : 선형 회귀에 L2규제를 추가한 회귀 모델
- 라쏘(Lasso) : 선형 회귀에 L1규제를 적용한 모델
- 엘라스틱넷(ElasticNet) : L2, L1 규제를 함께 결합한 모델
- 로지스틱 회귀(Rogistic Regression) : 분류에서 사용되는 선형 모델


최적의 회귀 모델
- 실제값과 모델 사이의 오류값(잔차) 합이 최소가 되는 모델
- 오류값 합이 최소가 될 수 있는 최적의 회귀 계수를 찾는 것



LinearRegression 클래스를 이용해서 보스턴 주택 가격의 회귀 모델 생성
- train_test_split()을 이용해서 학습/테스트 데이터셋 분리
- fit() 학습, predict() 예측 수행
- metrics 모듈의 mean_squared_error() 이용해서 MSE 측정
- r2_score() 이용해서 R2 Score 측정


회귀 평가 지표

MSE (Mean Squared Error) : 실제값과 예측값의 차이를 제곱해서 평균한 것

RMSE(Root Mean Squared Error)
- MSE 값이 오류의 제곱을 구하므로
- 실제 오류 평균보다 더 커지는 특성이 있으므로
- MSE에 루트를 씌운 것
- MSE에 제곱근을 씌워서 계산하는 함수 직접 만들어서사용
- 값이 작을수록 성능이 좋음

R제곱 : 분산 기반으로 예측 성능 평가
- 실제값의 분산 대비 예측값의 분산 비율을 지표로 하며
- 1에 가까울수록 예측 정확도가 높음


다항 회귀 
- 회귀가 '독립변수'의 단항식이 아닌 2차, 3차 방정식과 같은 다항식으로 표현되는 것
- 선형 회귀 (비선형 회귀 아님)
- (선형/비선형 구분은 회귀 계수가 선형/비선형 여부에 따른 것이지
  독립변수의 선형/비선형 여부와는 무관)
- 피처 X에 대해 타깃 Y 갓의 관계를 단순 션형회귀 직선형으로 표현한 것보다
- 다항 회귀 곡선형으로 표현한 것이 더 예측 성능이 높음



PolynomialFeatures 클래스
- PolynomialFeatures 클래스를 통해서 피처를 다항식 피처로 변환
- PolynomialFeatures(degree=2) : 2차 다항식
- fit()/transform() 메서드를 사용해서 변환 작업 수행



규제
- 비용함수에 alpha 값으로 패널티를 부여해서
- 회귀 곗수 값의 크기를 감소시켜 과적합을 개선하는 방식
- L2 방식과 L1 방식

L2 규제
- W의 제곱에 대해 패널티를 부여하는 방식
- 회귀 계수의 크기 감소
- L2 규제를 적용한 회귀 : 릿지(Redge) 방식
    
L1 규제
- W의 절대값에 대해 패널티를 부여하는 방식
- 영향력이 크지 않은 회귀 계수를 0으로 변환하고 제거
- 적절한 피처만 회귀에 포함시키는 피선 선택의 특성
- L1 규제를 적용한 회귀 : 라쏘(Lasso) 회귀
    

Elastic Net : L2, L1 규제를 함께 결합한 모델
- 주로 피처가 많은 데이터 세트에서 적용
- L1 규제로 피처의 개수를 줄임과 동시에
- L2 규제로 계수 값의 크기 조정



규제 선형 회귀의 가장 대표적인 기법인 릿지, 라쏘, 엘라스틱넷 회귀 결론
- 어떤 것이 가장 좋은지는 상황에 따라 다름
- 각 알고리즘에서 하이퍼 파라미터를 변경해 가면서
- 최적의 예측 성능을 찾아내야 함

- 그러나 선형 회귀의 경우 최적의 하이퍼 파라미터를 찾아내는 것 못지 않게
- 먼제 데이터 분포도의 정규화와 인코딩 방법이 매우 중요함




스케일링/정규화 작업 수행 방법
- 일반적으로 피처 데이터 셋과 타깃 데이터 셋에 다른 방법 적용

(1) 사이킷런을 이용해 피처 데이터 셋에 적용하는 변환 작업
방법1 : 스케일링/정규화 수행
    - StandadScaler 클래스 이용해서 평균이 0, 분산이 1인 표준 정규 분포를 가진 데이터 세트로 변환
    - 또는 MinMaxScaler 클래스를 이용해서 최소값이 0이고, 최대값이 1인 값으로정규화 수행
방법2 : 스케일링/정규화를 수행한 데이터 셋에 다시 다항 특성을 적용하여 변환하는 방법
    - 보통 방법1을 수행했는데 예측 성능에 향상이 없을 경우 적용
방법3 : 로그 변환
    - 원래 값에 log 함수를 적용하면 정규 분포에 가까운 형태로 값이 분포됨
    - 매우 유용한 변환으로, 실제 선형 회귀에서 훨씬 많이 사용
    - 방법1, 2보다 많이 사용하는 이유
        - 방법1의 경우 예측 성능을 크게 기대하기 어려운 경우가 많고
        - 방법2의 경우 피처 수가 많을 경우에 다항 변환으로 생성되는 피처 수가 기하급수적으로 늘어나서
            - 과적합이 발생할 수 있기 때문


(2) 타깃 값의 경우 : 로그 변환 적용
    - 왜곡된 분포도 형태의 타깃값을 로그 변환하여
    - 예측 성능이 향상된 경우가 많은 사례로 검증되었고
    - 결정값을 정규 분포나 다른 정규값으로 변환하면
    - 변환된 값을 다시 원본 타깃값으로 원복하기 어려울 수 있기 때문에
    - 일반적으로 로그 변환 적용




# 일반적으로 선형 회귀를 적용하려면 데이터 세트에
# 데이터 값의 분포가 심하게 왜곡되어 있을 경우에
# 로그 변환을 적용하는 것이 좋을 결과를 기대할 수 있음  






